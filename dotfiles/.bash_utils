#!/bin/bash

prepend() {
  local var=$1;
  local val=$2;
  local sep=${3:-":"};
  # value already in variable
  [[ ${!var} =~ (^|"$sep")"$val"($|"$sep") ]] && return;
  # variable is empty
  [[ ${!var} ]] || { printf -v "$var" '%s' "$val" && return; }
  # prepend here
  printf -v "$var" '%s%s%s' "$val" "$sep" "${!var}";
}

append() {
  local var=$1;
  local val=$2;
  local sep=${3:-":"};
  # value already in variable
  [[ ${!var} =~ (^|"$sep")"$val"($|"$sep") ]] && return;
  # variable is empty
  [[ ${!var} ]] || { printf -v "$var" '%s' "$val" && return; }
  # append here
  printf -v "$var" '%s%s%s' "${!var}" "$sep" "$val";
}

remove() {
  local var=$1;
  local val=$2;
  local sep=${3:-":"};
  while [[ ${!var} =~ (^|.*"$sep")"$val"($|"$sep".*) ]]; do
    if [[ ${BASH_REMATCH[1]} && ${BASH_REMATCH[2]} ]]; then
      # match is between both leading and trailing content
      printf -v "$var" '%s%s' "${BASH_REMATCH[1]%$sep}" "${BASH_REMATCH[2]}";
    elif [[ ${BASH_REMATCH[1]} ]]; then
      # match is at the end
      printf -v "$var" "${BASH_REMATCH[1]%$sep}";
    else
      # match is at the beginning
      printf -v "$var" "${BASH_REMATCH[2]#$sep}";
    fi;
  done;
}
